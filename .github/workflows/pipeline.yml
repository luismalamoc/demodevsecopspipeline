name: Pipeline

on: [push]

jobs:
  build_job:
    name: Build Job
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle
        run: ./gradlew build -x test
      - name: Run tests
        run: ./gradlew test
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
           build/
           .gradle/
          retention-days: 1

  sast_scan_job:
    name: SAST Scan Job
    runs-on: ubuntu-24.04
    needs: [build_job]
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Semgrep
        run: pip install semgrep
      - name: Run Semgrep scan with auto-config and error on findings
        run: semgrep scan --config=auto --severity=ERROR --severity=WARNING --error --verbose

  sca_scan_job:
    runs-on: ubuntu-24.04
    name: SCA Scan Job
    needs: [build_job]
    if: success()
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Download and Install OWASP Dependency-Check
        run: |
          VERSION=$(curl -s https://jeremylong.github.io/DependencyCheck/current.txt)
          wget "https://github.com/jeremylong/DependencyCheck/releases/download/v${VERSION}/dependency-check-${VERSION}-release.zip"
          unzip dependency-check-${VERSION}-release.zip

      - name: Run OWASP Dependency-Check
        run: |
          ./dependency-check/bin/dependency-check.sh \
            --project "spring-boot-app" \
            --scan . \
            --format ALL \
            --out reports \
            --failOnCVSS 4 \
            --enableRetired \
            --suppression suppression.xml
        continue-on-error: false  # Falla el pipeline si encuentra vulnerabilidades

      - name: Upload Dependency-Check Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: reports/
          retention-days: 30

      - name: Display Critical Findings
        if: failure()
        run: |
          echo "‚ùå CRITICAL VULNERABILITIES FOUND!"
          echo "=== OWASP Dependency-Check Results ==="
          if [ -f reports/dependency-check-report.json ]; then
            cat reports/dependency-check-report.json | jq '.dependencies[] | select(.vulnerabilities != null) | {fileName: .fileName, vulnerabilities: .vulnerabilities}'
          fi

  docker_image_scan_job:
    runs-on: ubuntu-24.04
    needs: [build_job]
    if: success()
    name: Docker Image Scan Job
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Build an image from Dockerfile
        run: docker build -t ${{ github.repository }}:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ github.repository }}:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'
