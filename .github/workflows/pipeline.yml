name: Pipeline

on: [push]

jobs:
  build_job:
    name: Build Job
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle
        run: ./gradlew build -x test
      - name: Run tests
        run: ./gradlew test

  sast_scan_job:
    name: SAST Scan Job
    runs-on: ubuntu-24.04
    needs: [build_job]
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Semgrep
        run: pip install semgrep
      - name: Run Semgrep scan with auto-config and error on findings
        run: semgrep scan --config=auto --severity=ERROR --severity=WARNING --error --verbose

  sca_scan_job:
    runs-on: ubuntu-24.04
    name: SCA Scan Job
    needs: [build_job]
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'spring-boot-app'
          path: '.'
          format: 'ALL'
          out: 'reports'
          args: >
            --failOnCVSS 4
            --enableRetired
            --scan build.gradle
            --scan gradle.lockfile
      - name: Display Dependency-Check Report
        if: always()
        run: |
          echo "=== OWASP Dependency-Check Results ==="
          if [ -f reports/dependency-check-report.json ]; then
            cat reports/dependency-check-report.json
          fi
          if [ -f reports/dependency-check-report.xml ]; then
            cat reports/dependency-check-report.xml
          fi

  docker_image_scan_job:
    runs-on: ubuntu-24.04
    needs: [build_job]
    if: success()
    name: Docker Image Scan Job
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Build an image from Dockerfile
        run: docker build -t ${{ github.repository }}:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ github.repository }}:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'
